name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run Maven clean compile
      run: mvn clean compile
      
    - name: Run Maven test
      run: mvn test
      
    - name: Run Maven package
      run: mvn package -DskipTests
      
    - name: Run SpotBugs static analysis
      run: mvn spotbugs:check
      continue-on-error: true
      
    - name: Run Checkstyle linting
      run: mvn checkstyle:check
      continue-on-error: true
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        
    - name: Upload SpotBugs results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: spotbugs-results
        path: target/spotbugsXml.xml
        
    - name: Upload Checkstyle results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: checkstyle-results
        path: target/checkstyle-result.xml

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: docker build -t url-shortener:${{ github.sha }} .
      
    - name: Test Docker image
      run: |
        # Start app with in-memory service (no Redis needed)
        docker run -d --name test-container -p 8080:8080 \
          -e SPRING_PROFILES_ACTIVE=default \
          url-shortener:${{ github.sha }}
        
        # Wait for app to start with retry logic
        echo "Waiting for app to start..."
        for i in {1..12}; do
          if curl -f http://localhost:8080/actuator/health > /dev/null 2>&1; then
            echo "App is ready!"
            break
          fi
          echo "Attempt $i/12: App not ready yet, waiting 10 seconds..."
          sleep 10
        done
        
        # Final test
        curl -f http://localhost:8080/actuator/health || exit 1
        curl -f http://localhost:8080/ || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container
