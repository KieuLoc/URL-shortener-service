services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: url-shortener-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: url_shortener
      POSTGRES_USER: urluser
      POSTGRES_PASSWORD: urlpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - url-shortener-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U urluser -d url_shortener"]
      interval: 10s
      timeout: 5s
      retries: 5

  # URL Shortener Application
  app:
    build: .
    container_name: url-shortener-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: urluser
      DB_PASSWORD: urlpass
      DB_URL: jdbc:postgresql://postgres:5432/url_shortener
      BASE_URL: http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - url-shortener-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/urls/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: url-shortener-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@urlshortener.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - url-shortener-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  url-shortener-network:
    driver: bridge
